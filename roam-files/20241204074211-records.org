:PROPERTIES:
:ID:       3c455fce-b40d-4c6a-acc9-bdde1d805940
:END:
#+title: Records
#+date: [2024-12-04 Wed 07:42]
#+startup: overview

- like pairs, bundle different types together, but giving them names
- no types need to be declared when binding a value of type person to an identifier
  - type checker will search for a appropriate type (matching names and types)
- no extending of records, records do not have relationships between each other

* example gerard
** person record
#+begin_src ocaml
type person = {
    first_name : string;
    surname : string;
    age : int;
  };;
#+end_src

#+RESULTS:
: type person = { first_name : string; surname : string; age : int; }

#+begin_src ocaml
let gerard = {
    first_name = "Gérard" ;
    surname = "Huet" ;
    age = 76 };;
(* #show gerard;; *)
#+end_src

#+RESULTS:
: {first_name = "Gérard"; surname = "Huet"; age = 76}

#+begin_src ocaml
let is_teenager person =
  match person with
    | { age = x; _ } -> 13 <= x && x <= 19;;

is_teenager gerard
#+end_src

#+RESULTS:
: false
